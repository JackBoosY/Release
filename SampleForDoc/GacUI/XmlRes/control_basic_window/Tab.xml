<Instance ref.CodeBehind="false" ref.Class="sample::TabWindowTabTemplate">
  <ref.Members>
    <![CDATA[
      func UpdateTabHeader() : void
      {
        for (flowItem in header.FlowItems)
        {
          var item = cast (TabWindowTabHeaderTemplate*) flowItem.Children[0];
          if (item.CurrentTabPage == self.SelectedTabPage)
          {
            flowItem.ExtraMargin = {left:2 top:2 right:2 bottom:0};
            header.MoveChild(flowItem, header.Children.Count - 1);
          }
          else
          {
            flowItem.ExtraMargin = {left:0 top:0 right:0 bottom:0};
          }
        }
      }
    ]]>
  </ref.Members>
  <RibbonTabTemplate ref.Name="self" ContainerComposition-ref="container" TabOrder="LeftToRight" MinSizeLimitation="LimitToElementAndChildren">
    <ev.SelectedTabPageChanged-eval>
      <![CDATA[
        {
          self.UpdateTabHeader();
        }
      ]]>
    </ev.SelectedTabPageChanged-eval>
    <att.BeforeHeadersContainer-ref>beforeHeadersContainer</att.BeforeHeadersContainer-ref>
    <att.AfterHeadersContainer-ref>afterHeadersContainer</att.AfterHeadersContainer-ref>
    
    <Table AlignmentToParent="left:0 top:0 right:0 bottom:0" MinSizeLimitation="LimitToElementAndChildren">
      <SolidBackground Color="#2D2D30"/>
      <att.Rows>
        <CellOption>composeType:MinSize</CellOption>
        <CellOption>composeType:Absolute absolute:2</CellOption>
        <CellOption>composeType:Percentage percentage:1.0</CellOption>
      </att.Rows>
      <att.Columns>
        <CellOption>composeType:MinSize</CellOption>
        <CellOption>composeType:Percentage percentage:1.0</CellOption>
        <CellOption>composeType:MinSize</CellOption>
      </att.Columns>

      <Cell ref.Name="beforeHeadersContainer" Site="row:0 column:0"/>
      <Cell ref.Name="afterHeadersContainer" Site="row:0 column:2"/>

      <Cell Site="row:0 column:1">
        <RepeatFlow ref.Name="header" AlignmentToParent="left:0 top:0 right:0 bottom:0" ExtraMargin="left:2 top:2 right:2 bottom:0" MinSizeLimitation="LimitToElementAndChildren">
          <att.ItemTemplate>sample::TabWindowTabHeaderTemplate</att.ItemTemplate>
          <att.ItemSource-bind>self.TabPages</att.ItemSource-bind>
          <ev.ItemInserted-eval>
            <![CDATA[
              {
                var flowItem = header.FlowItems[arguments.itemIndex];
                var item = cast (TabWindowTabHeaderTemplate*) flowItem.Children[0];
                item.Commands = self.Commands;
                self.UpdateTabHeader();
              }
            ]]>
          </ev.ItemInserted-eval>
          <ev.ItemRemoved-eval>
            <![CDATA[
              {
                self.UpdateTabHeader();
              }
            ]]>
          </ev.ItemRemoved-eval>
        </RepeatFlow>
      </Cell>
      <Cell Site="row:1 column:0 columnSpan:3">
        <SolidBackground Color="#007ACC"/>
      </Cell>
      <Cell Site="row:2 column:0 columnSpan:3">
        <SolidBorder Color="#434346"/>
        <Bounds ref.Name="container" AlignmentToParent="left:1 top:1 right:1 bottom:1"/>
      </Cell>
    </Table>
  </RibbonTabTemplate>
</Instance>